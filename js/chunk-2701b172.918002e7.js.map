{"version":3,"sources":["webpack:///./src/layouts/InterfaceLayout/containers/SwapContainer/components/SwapWidget/SwapWidget.vue?6168","webpack:///./src/layouts/InterfaceLayout/containers/SwapContainer/components/SwapWidget/SwapWidget.vue?60de","webpack:///src/layouts/InterfaceLayout/containers/SwapContainer/components/SwapWidget/SwapWidget.vue","webpack:///./src/layouts/InterfaceLayout/containers/SwapContainer/components/SwapWidget/SwapWidget.vue?7972","webpack:///./src/layouts/InterfaceLayout/containers/SwapContainer/components/SwapWidget/SwapWidget.vue","webpack:///./src/components/SwapWidget/index.js"],"names":["_MyEtherWallet_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_MyEtherWallet_node_modules_css_loader_index_js_ref_8_oneOf_1_1_MyEtherWallet_node_modules_vue_loader_lib_loaders_stylePostLoader_js_MyEtherWallet_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_MyEtherWallet_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_MyEtherWallet_node_modules_cache_loader_dist_cjs_js_ref_0_0_MyEtherWallet_node_modules_vue_loader_lib_index_js_vue_loader_options_SwapWidget_vue_vue_type_style_index_0_id_2f40bd05_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_MyEtherWallet_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_MyEtherWallet_node_modules_css_loader_index_js_ref_8_oneOf_1_1_MyEtherWallet_node_modules_vue_loader_lib_loaders_stylePostLoader_js_MyEtherWallet_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_MyEtherWallet_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_MyEtherWallet_node_modules_cache_loader_dist_cjs_js_ref_0_0_MyEtherWallet_node_modules_vue_loader_lib_index_js_vue_loader_options_SwapWidget_vue_vue_type_style_index_0_id_2f40bd05_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default","n","render","_vm","this","_h","$createElement","_c","_self","staticClass","ref","attrs","title","centered","hide-footer","directives","name","rawName","value","bityExitToFiat","expression","selected-provider","selectedProvider","swap-details","swapDetails","current-address","currentAddress","on","swapStarted","resetSwapState","_v","_s","$t","tokenBalances","fromCurrency","click","swapAll","_e","currencies","fromArray","override-currency","overrideFrom","from-source","selectable","isWidget","page","selectedCurrency","setFromCurrency","type","step","placeholder","domProps","input","$event","target","composing","fromValue","amountChanged","fromBelowMinAllowed","hasEnough","fromAboveMaxAllowed","flipCurrencies","src","images","swap","toArray","overrideTo","setToCurrency","toValue","toBelowMinAllowed","toAboveMaxAllowed","isExitToFiat","currency","toCurrency","copybutton","pre-fill","pre-fill-address","destAddress","toAddress","setToAddress","validAddress","baseCurrency","setExitFromAddress","validExitAddress","setRefundAddress","validRefundAddress","loading-provider-error","loadingError","loading-provider-rates","haveProviderRates","provider-data","providerList","from-value","to-value","no-providers-pair","noProvidersPair","loading-data","loadingData","providers-found","providersFound","provider-selected","switch-currency-order","switchCurrencyOrder","all-supported-providers","supportedProviders","setSelectedProvider","finalizingSwap","class","validSwap","swapConfirmationModalOpen","aria-hidden","link-text","question","link","exit-from-address","exitSourceAddress","exit-to-fiat-callback","exitToFiatCallback","backButtonClick","exitToFiatAbort","staticRenderFns","errorLogger","browser_default","SwapWidgetvue_type_script_lang_js_toBigNumber","num","bignumber_default","a","SwapWidgetvue_type_script_lang_js_","components","interface-bottom-text","InterfaceBottomText","interface-container-title","InterfaceContainerTitle","swap-currency-picker","SwapCurrencyPicker","drop-down-address-selector","SwapAddressSelector","providers-radio-selector","ProvidersRadioSelector","swap-confirmation-modal","SwapConfirmationModal","swap-exit-to-fiat","SwapExitToFiat","swap-send-form","swap-send-to-modal","SwapSendToModal","props","tokensWithBalance","Array","default","suppliedFrom","Object","symbol","suppliedTo","suppliedToAmount","Number","suppliedFromAmount","String","Boolean","data","partners","refundAddress","exitFromAddress","displayToValue","displayFromValue","invalidFrom","lastBestRate","currencyDetails","network","$store","state","web3","getRateForUnit","overrideDecimals","online","kybernetowrk","kybernetwork_default","bity","bity_default","visaMaster","visamaster_default","swap_default","providerData","providerRatesRecieved","tempStatuses","providerNames","fiatCurrenciesArray","map","entry","ratesRetrived","issueRecievingRates","debounceUpdateEstimate","debounceDoThing","widgetOpen","loadingWidget","computed","_objectSpread","vuex_esm","bestRate","_this","length","provider","find","rate","toConsumableArray","e","gt","concat","minValue","maxValue","toFixed","checkBityMax","checkBityMin","gte","includes","canExit","allAddressesValid","lte","isProvider","getProvider","minCheck","maxCheck","showRefundAddress","isToken","changelly","validBaseToAddress","checkAddress","enteredVal","convertToTokenWei","_enteredVal","account","balance","watch","_watch","defineProperty","updateNetwork","_this$swap$initialCur","initialCurrencyLists","_this2","_this$swap$buildIniti","buildInitialCurrencyArrays","updateRateEstimate","$once","calculateFromValue","calculateToValue","newVal","mounted","_this3","_this$swap$initialCur2","address","utils","_","debounce","updateEstimate","debounceReviseRateEstimate","$refs","modal","$on","methods","reset","origTo","to","from","convertToTokenBase","dir","arguments","undefined","getBalance","setToCurrencyBuilder","setFromCurrencyBuilder","_getBalance","asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","eth","Contract","getTokenAddress","balanceOf","call","sent","$set","stop","_x","apply","direction","simplex","fiat","fromCur","toCur","fromVal","_updateEstimate","_callee2","simplexProvider","simplexRateDetails","_rate","_context2","t0","abrupt","canQuote","updateDigital","updateFiat","div","toString","_x2","_updateRateEstimate","_callee3","_ref","callsToMake","results","_this4","_context3","Promise","all","func","every","computeConversion","_fromValue","times","$emit","_x3","_x4","_x5","_x6","_swapConfirmationModalOpen","_callee4","providerDetails","_this5","_context4","fromAddress","startSwap","swapDetailsExit","openConfirmModal","message","swapConfirmation","swapconfirmation","hide","swapSendTo","helpers","responseHandler","dataForInitialization","maybeToken","show","Error","SwapWidget_SwapWidgetvue_type_script_lang_js_","component","componentNormalizer","SwapWidget","d","__webpack_exports__"],"mappings":"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","file":"js/chunk-2701b172.918002e7.js","sourcesContent":["import mod from \"-!../../../../../../../../MyEtherWallet/node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../../../../MyEtherWallet/node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../../../../../../MyEtherWallet/node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../../../MyEtherWallet/node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../../../../MyEtherWallet/node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../../../../../../MyEtherWallet/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../../../../MyEtherWallet/node_modules/vue-loader/lib/index.js??vue-loader-options!./SwapWidget.vue?vue&type=style&index=0&id=2f40bd05&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../../../../../../MyEtherWallet/node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../../../../MyEtherWallet/node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../../../../../../MyEtherWallet/node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../../../MyEtherWallet/node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../../../../MyEtherWallet/node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../../../../../../MyEtherWallet/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../../../../MyEtherWallet/node_modules/vue-loader/lib/index.js??vue-loader-options!./SwapWidget.vue?vue&type=style&index=0&id=2f40bd05&lang=scss&scoped=true&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"modal-container\"},[_c('b-modal',{ref:\"modal\",staticClass:\"bootstrap-modal bootstrap-modal-wide padding-40-20\",attrs:{\"title\":\"Swap Widget\",\"centered\":\"\",\"hide-footer\":\"\"}},[_c('div',{staticClass:\"swap-container\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.bityExitToFiat),expression:\"!bityExitToFiat\"}]},[_c('swap-confirmation-modal',{ref:\"swapConfirmation\",attrs:{\"selected-provider\":_vm.selectedProvider,\"swap-details\":_vm.swapDetails,\"current-address\":_vm.currentAddress},on:{\"swapStarted\":_vm.resetSwapState}}),_c('swap-send-to-modal',{ref:\"swapSendTo\",attrs:{\"selected-provider\":_vm.selectedProvider,\"swap-details\":_vm.swapDetails,\"current-address\":_vm.currentAddress},on:{\"swapStarted\":_vm.resetSwapState}}),_c('div',{staticClass:\"form-content-container\"},[_c('div',{staticClass:\"send-form\"},[_c('div',{staticClass:\"form-block amount-to-address\"},[_c('div',{staticClass:\"amount\"},[_c('div',{staticClass:\"title title-and-copy\"},[_c('h4',[_vm._v(_vm._s(_vm.$t('common.from')))]),(_vm.tokenBalances[_vm.fromCurrency] > 0)?_c('p',{staticClass:\"all-button prevent-user-select\",on:{\"click\":_vm.swapAll}},[_vm._v(\"\\n                    \"+_vm._s(_vm.$t('common.totalBalance'))+\"\\n                  \")]):_vm._e()]),_c('swap-currency-picker',{attrs:{\"currencies\":_vm.fromArray,\"override-currency\":_vm.overrideFrom,\"from-source\":true,\"selectable\":!_vm.isWidget,\"page\":\"SwapContainerFrom\"},on:{\"selectedCurrency\":_vm.setFromCurrency}}),_c('div',{staticClass:\"the-form amount-number\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.fromValue),expression:\"fromValue\"}],attrs:{\"type\":\"number\",\"name\":\"\",\"value\":\"\",\"step\":\"any\",\"placeholder\":\"Deposit Amount\"},domProps:{\"value\":(_vm.fromValue)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.fromValue=$event.target.value},function($event){return _vm.amountChanged('from')}]}})]),_c('div',{staticClass:\"error-message-container\"},[(_vm.fromBelowMinAllowed)?_c('p',[_vm._v(_vm._s(_vm.fromBelowMinAllowed))]):_vm._e(),(!_vm.hasEnough && !_vm.fromBelowMinAllowed)?_c('p',[_vm._v(\"\\n                    \"+_vm._s(_vm.$t('common.dontHaveEnough'))+\"\\n                  \")]):_vm._e(),(_vm.fromAboveMaxAllowed)?_c('p',[_vm._v(_vm._s(_vm.fromAboveMaxAllowed))]):_vm._e()])],1),_c('div',{staticClass:\"exchange-icon\",on:{\"click\":_vm.flipCurrencies}},[_c('img',{attrs:{\"src\":_vm.images.swap}})]),_c('div',{staticClass:\"amount\"},[_c('div',{staticClass:\"title\"},[_c('h4',[_vm._v(_vm._s(_vm.$t('common.to')))])]),_c('swap-currency-picker',{attrs:{\"currencies\":_vm.toArray,\"override-currency\":_vm.overrideTo,\"from-source\":false,\"selectable\":!_vm.isWidget,\"page\":\"SwapContainerTo\"},on:{\"selectedCurrency\":_vm.setToCurrency}}),_c('div',{staticClass:\"the-form amount-number\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.toValue),expression:\"toValue\"}],attrs:{\"type\":\"number\",\"name\":\"\",\"value\":\"\",\"step\":\"any\",\"placeholder\":\"Received Amount\"},domProps:{\"value\":(_vm.toValue)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.toValue=$event.target.value},function($event){return _vm.amountChanged('to')}]}})]),_c('div',{staticClass:\"error-message-container\"},[(_vm.toBelowMinAllowed)?_c('p',[_vm._v(_vm._s(_vm.toBelowMinAllowed))]):_vm._e(),(_vm.toAboveMaxAllowed)?_c('p',[_vm._v(_vm._s(_vm.toAboveMaxAllowed))]):_vm._e()])],1)])]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.isExitToFiat),expression:\"!isExitToFiat\"}],staticClass:\"send-form\"},[_c('div',{staticClass:\"the-form gas-amount\"},[_c('drop-down-address-selector',{attrs:{\"currency\":_vm.toCurrency,\"current-address\":_vm.currentAddress,\"copybutton\":true,\"title\":_vm.$t('common.toAddress'),\"pre-fill\":true,\"pre-fill-address\":_vm.destAddress},on:{\"toAddress\":_vm.setToAddress,\"validAddress\":function($event){_vm.validAddress = $event}}})],1),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.validAddress),expression:\"!validAddress\"}],staticClass:\"error-message-container\"},[_c('p',[_vm._v(\"\\n                \"+_vm._s(_vm.$t('interface.notValidAddr', { currency: _vm.toCurrency }))+\"\\n              \")])])]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isExitToFiat && _vm.fromCurrency !== _vm.baseCurrency),expression:\"isExitToFiat && fromCurrency !== baseCurrency\"}],staticClass:\"send-form\"},[_c('div',{staticClass:\"the-form gas-amount\"},[_c('drop-down-address-selector',{attrs:{\"currency\":_vm.fromCurrency,\"current-address\":_vm.currentAddress,\"copybutton\":true,\"title\":_vm.$t('interface.fromAddr')},on:{\"toAddress\":_vm.setExitFromAddress,\"validAddress\":function($event){_vm.validExitAddress = $event}}})],1),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.validExitAddress),expression:\"!validExitAddress\"}],staticClass:\"error-message-container\"},[_c('p',[_vm._v(\"\\n                \"+_vm._s(_vm.$t('interface.notValidAddrSrc', { currency: _vm.fromCurrency }))+\"\\n              \")])])]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showRefundAddress),expression:\"showRefundAddress\"}],staticClass:\"send-form\"},[_c('div',{staticClass:\"the-form gas-amount\"},[_c('drop-down-address-selector',{attrs:{\"currency\":_vm.fromCurrency,\"current-address\":_vm.currentAddress,\"copybutton\":true,\"title\":_vm.$t('interface.refund', { currency: _vm.fromCurrency })},on:{\"toAddress\":_vm.setRefundAddress,\"validAddress\":function($event){_vm.validRefundAddress = $event}}})],1),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.validRefundAddress),expression:\"!validRefundAddress\"}],staticClass:\"error-message-container\"},[_c('p',[_vm._v(\"\\n                \"+_vm._s(_vm.$t('interface.notValidAddr', { currency: _vm.fromCurrency }))+\"\\n              \")])])]),_c('div',{staticClass:\"send-form\"},[_c('div',{staticClass:\"title-container\"},[_c('div',{staticClass:\"title title-and-copy\"},[_c('h4',[_vm._v(_vm._s(_vm.$t('interface.providers')))])])]),_c('providers-radio-selector',{attrs:{\"loading-provider-error\":_vm.loadingError,\"loading-provider-rates\":!_vm.haveProviderRates,\"provider-data\":_vm.providerList,\"from-value\":+_vm.fromValue,\"to-value\":+_vm.toValue,\"no-providers-pair\":_vm.noProvidersPair,\"loading-data\":_vm.loadingData,\"providers-found\":_vm.providersFound,\"provider-selected\":_vm.selectedProvider,\"switch-currency-order\":_vm.switchCurrencyOrder,\"all-supported-providers\":_vm.supportedProviders},on:{\"selectedProvider\":_vm.setSelectedProvider}})],1),_c('div',{staticClass:\"submit-button-container\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.finalizingSwap),expression:\"finalizingSwap\"}],staticClass:\"disabled submit-button large-round-button-green-filled clickable\"},[_c('i',{staticClass:\"fa fa-spinner fa-spin\"}),_vm._v(\"\\n              \"+_vm._s(_vm.$t('interface.swapButtonLoading'))+\"\\n            \")]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.finalizingSwap),expression:\"!finalizingSwap\"}],class:[\n                _vm.validSwap ? '' : 'disabled',\n                'submit-button large-round-button-green-filled clickable'\n              ],on:{\"click\":_vm.swapConfirmationModalOpen}},[_vm._v(\"\\n              \"+_vm._s(_vm.$t('common.continue'))+\"\\n              \"),_c('i',{staticClass:\"fa fa-long-arrow-right\",attrs:{\"aria-hidden\":\"true\"}})]),_c('interface-bottom-text',{attrs:{\"link-text\":_vm.$t('interface.helpCenter'),\"question\":_vm.$t('interface.haveIssues'),\"link\":\"https://kb.myetherwallet.com\"}})],1)])],1),(_vm.bityExitToFiat)?_c('swap-exit-to-fiat',{attrs:{\"swap-details\":_vm.swapDetails,\"exit-from-address\":_vm.exitSourceAddress,\"exit-to-fiat-callback\":_vm.exitToFiatCallback},on:{\"backButtonClick\":_vm.exitToFiatAbort}}):_vm._e()],1)])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"modal-container\">\n    <b-modal\n      ref=\"modal\"\n      title=\"Swap Widget\"\n      centered\n      class=\"bootstrap-modal bootstrap-modal-wide padding-40-20\"\n      hide-footer\n    >\n      <div class=\"swap-container\">\n        <div v-show=\"!bityExitToFiat\">\n          <swap-confirmation-modal\n            ref=\"swapConfirmation\"\n            :selected-provider=\"selectedProvider\"\n            :swap-details=\"swapDetails\"\n            :current-address=\"currentAddress\"\n            @swapStarted=\"resetSwapState\"\n          />\n\n          <swap-send-to-modal\n            ref=\"swapSendTo\"\n            :selected-provider=\"selectedProvider\"\n            :swap-details=\"swapDetails\"\n            :current-address=\"currentAddress\"\n            @swapStarted=\"resetSwapState\"\n          />\n\n          <!--          <div class=\"title-block\">-->\n          <!--            <interface-container-title :title=\"$t('common.swap')\" />-->\n          <!--          </div>-->\n\n          <div class=\"form-content-container\">\n            <div class=\"send-form\">\n              <div class=\"form-block amount-to-address\">\n                <div class=\"amount\">\n                  <div class=\"title title-and-copy\">\n                    <h4>{{ $t('common.from') }}</h4>\n                    <p\n                      v-if=\"tokenBalances[fromCurrency] > 0\"\n                      class=\"all-button prevent-user-select\"\n                      @click=\"swapAll\"\n                    >\n                      {{ $t('common.totalBalance') }}\n                    </p>\n                  </div>\n                  <swap-currency-picker\n                    :currencies=\"fromArray\"\n                    :override-currency=\"overrideFrom\"\n                    :from-source=\"true\"\n                    :selectable=\"!isWidget\"\n                    page=\"SwapContainerFrom\"\n                    @selectedCurrency=\"setFromCurrency\"\n                  />\n                  <div class=\"the-form amount-number\">\n                    <input\n                      v-model=\"fromValue\"\n                      type=\"number\"\n                      name\n                      value\n                      step=\"any\"\n                      placeholder=\"Deposit Amount\"\n                      @input=\"amountChanged('from')\"\n                    />\n                  </div>\n                  <div class=\"error-message-container\">\n                    <p v-if=\"fromBelowMinAllowed\">{{ fromBelowMinAllowed }}</p>\n                    <p v-if=\"!hasEnough && !fromBelowMinAllowed\">\n                      {{ $t('common.dontHaveEnough') }}\n                    </p>\n                    <p v-if=\"fromAboveMaxAllowed\">{{ fromAboveMaxAllowed }}</p>\n                  </div>\n                </div>\n                <div class=\"exchange-icon\" @click=\"flipCurrencies\">\n                  <img :src=\"images.swap\" />\n                </div>\n                <div class=\"amount\">\n                  <div class=\"title\">\n                    <h4>{{ $t('common.to') }}</h4>\n                  </div>\n                  <swap-currency-picker\n                    :currencies=\"toArray\"\n                    :override-currency=\"overrideTo\"\n                    :from-source=\"false\"\n                    :selectable=\"!isWidget\"\n                    page=\"SwapContainerTo\"\n                    @selectedCurrency=\"setToCurrency\"\n                  />\n                  <div class=\"the-form amount-number\">\n                    <input\n                      v-model=\"toValue\"\n                      type=\"number\"\n                      name\n                      value\n                      step=\"any\"\n                      placeholder=\"Received Amount\"\n                      @input=\"amountChanged('to')\"\n                    />\n                  </div>\n                  <div class=\"error-message-container\">\n                    <p v-if=\"toBelowMinAllowed\">{{ toBelowMinAllowed }}</p>\n                    <p v-if=\"toAboveMaxAllowed\">{{ toAboveMaxAllowed }}</p>\n                  </div>\n                </div>\n              </div>\n              <!-- form-block amount-to-address -->\n            </div>\n\n            <div v-show=\"!isExitToFiat\" class=\"send-form\">\n              <div class=\"the-form gas-amount\">\n                <drop-down-address-selector\n                  :currency=\"toCurrency\"\n                  :current-address=\"currentAddress\"\n                  :copybutton=\"true\"\n                  :title=\"$t('common.toAddress')\"\n                  :pre-fill=\"true\"\n                  :pre-fill-address=\"destAddress\"\n                  @toAddress=\"setToAddress\"\n                  @validAddress=\"validAddress = $event\"\n                />\n              </div>\n              <div v-show=\"!validAddress\" class=\"error-message-container\">\n                <p>\n                  {{ $t('interface.notValidAddr', { currency: toCurrency }) }}\n                </p>\n              </div>\n            </div>\n\n            <div\n              v-show=\"isExitToFiat && fromCurrency !== baseCurrency\"\n              class=\"send-form\"\n            >\n              <div class=\"the-form gas-amount\">\n                <drop-down-address-selector\n                  :currency=\"fromCurrency\"\n                  :current-address=\"currentAddress\"\n                  :copybutton=\"true\"\n                  :title=\"$t('interface.fromAddr')\"\n                  @toAddress=\"setExitFromAddress\"\n                  @validAddress=\"validExitAddress = $event\"\n                />\n              </div>\n              <div v-show=\"!validExitAddress\" class=\"error-message-container\">\n                <p>\n                  {{\n                    $t('interface.notValidAddrSrc', { currency: fromCurrency })\n                  }}\n                </p>\n              </div>\n            </div>\n\n            <div v-show=\"showRefundAddress\" class=\"send-form\">\n              <div class=\"the-form gas-amount\">\n                <drop-down-address-selector\n                  :currency=\"fromCurrency\"\n                  :current-address=\"currentAddress\"\n                  :copybutton=\"true\"\n                  :title=\"$t('interface.refund', { currency: fromCurrency })\"\n                  @toAddress=\"setRefundAddress\"\n                  @validAddress=\"validRefundAddress = $event\"\n                />\n              </div>\n              <div v-show=\"!validRefundAddress\" class=\"error-message-container\">\n                <p>\n                  {{ $t('interface.notValidAddr', { currency: fromCurrency }) }}\n                </p>\n              </div>\n            </div>\n\n            <div class=\"send-form\">\n              <div class=\"title-container\">\n                <div class=\"title title-and-copy\">\n                  <h4>{{ $t('interface.providers') }}</h4>\n                </div>\n              </div>\n              <providers-radio-selector\n                :loading-provider-error=\"loadingError\"\n                :loading-provider-rates=\"!haveProviderRates\"\n                :provider-data=\"providerList\"\n                :from-value=\"+fromValue\"\n                :to-value=\"+toValue\"\n                :no-providers-pair=\"noProvidersPair\"\n                :loading-data=\"loadingData\"\n                :providers-found=\"providersFound\"\n                :provider-selected=\"selectedProvider\"\n                :switch-currency-order=\"switchCurrencyOrder\"\n                :all-supported-providers=\"supportedProviders\"\n                @selectedProvider=\"setSelectedProvider\"\n              />\n            </div>\n\n            <div class=\"submit-button-container\">\n              <div\n                v-show=\"finalizingSwap\"\n                class=\"disabled submit-button large-round-button-green-filled clickable\"\n              >\n                <i class=\"fa fa-spinner fa-spin\" />\n                {{ $t('interface.swapButtonLoading') }}\n              </div>\n              <div\n                v-show=\"!finalizingSwap\"\n                :class=\"[\n                  validSwap ? '' : 'disabled',\n                  'submit-button large-round-button-green-filled clickable'\n                ]\"\n                @click=\"swapConfirmationModalOpen\"\n              >\n                {{ $t('common.continue') }}\n                <i class=\"fa fa-long-arrow-right\" aria-hidden=\"true\" />\n              </div>\n              <interface-bottom-text\n                :link-text=\"$t('interface.helpCenter')\"\n                :question=\"$t('interface.haveIssues')\"\n                link=\"https://kb.myetherwallet.com\"\n              />\n            </div>\n          </div>\n        </div>\n        <swap-exit-to-fiat\n          v-if=\"bityExitToFiat\"\n          :swap-details=\"swapDetails\"\n          :exit-from-address=\"exitSourceAddress\"\n          :exit-to-fiat-callback=\"exitToFiatCallback\"\n          @backButtonClick=\"exitToFiatAbort\"\n        ></swap-exit-to-fiat>\n      </div>\n    </b-modal>\n  </div>\n</template>\n<script>\nimport BigNumber from 'bignumber.js';\nimport debug from 'debug';\nimport { mapState } from 'vuex';\n\nimport { Toast } from '@/helpers';\nimport ProvidersRadioSelector from '../ProvidersRadioSelector';\nimport DropDownAddressSelector from '../SwapAddressSelector';\nimport InterfaceBottomText from '@/components/InterfaceBottomText';\nimport InterfaceContainerTitle from '../../../../components/InterfaceContainerTitle';\nimport swapIcon from '@/assets/images/icons/swap.svg';\nimport ImageKybernetowrk from '@/assets/images/etc/kybernetwork.png';\nimport ImageBity from '@/assets/images/etc/bity.png';\nimport ImageVisaMaster from '@/assets/images/etc/visamaster.png';\n\nimport SwapCurrencyPicker from '../SwapCurrencyPicker';\nimport SwapConfirmationModal from '../SwapConfirmationModal';\nimport SwapExitToFiat from '../SwapExitToFiat';\nimport SwapSendToModal from '../SwapSendToModal';\n\nimport {\n  SwapProviders,\n  providers,\n  bestProviderForQuantity,\n  bestRateForQuantity,\n  isValidEntry,\n  providerNames,\n  supportedProviders,\n  BASE_CURRENCY,\n  fiat,\n  MIN_SWAP_AMOUNT,\n  ERC20\n} from '@/partners';\n\nconst errorLogger = debug('v5:swapContainer');\nimport SwapSendForm from '../SwapExitToFiat';\n\nconst toBigNumber = num => {\n  return new BigNumber(num);\n};\n\nexport default {\n  components: {\n    'interface-bottom-text': InterfaceBottomText,\n    'interface-container-title': InterfaceContainerTitle,\n    'swap-currency-picker': SwapCurrencyPicker,\n    'drop-down-address-selector': DropDownAddressSelector,\n    'providers-radio-selector': ProvidersRadioSelector,\n    'swap-confirmation-modal': SwapConfirmationModal,\n    'swap-exit-to-fiat': SwapExitToFiat,\n    'swap-send-form': SwapSendForm,\n    'swap-send-to-modal': SwapSendToModal\n  },\n  props: {\n    tokensWithBalance: {\n      type: Array,\n      default: function() {\n        return [];\n      }\n    },\n    suppliedFrom: {\n      type: Object,\n      default: function() {\n        return {\n          symbol: 'ETH',\n          name: 'Ethereum'\n        };\n      }\n    },\n    suppliedTo: {\n      type: Object,\n      default: function() {\n        return {\n          symbol: 'BTC',\n          name: 'Bitcoin'\n        };\n      }\n    },\n    suppliedToAmount: {\n      type: Number,\n      default: 0\n    },\n    suppliedFromAmount: {\n      type: Number,\n      default: 0\n    },\n    destAddress: {\n      type: String,\n      default: ''\n    },\n    isWidget: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data() {\n    return {\n      baseCurrency: BASE_CURRENCY,\n      toAddress: '',\n      currentAddress: '',\n      refundAddress: '',\n      exitFromAddress: '',\n      fromCurrency: 'ETH',\n      toCurrency: 'ETH',\n      displayToValue: 1,\n      displayFromValue: 1,\n      fromValue: 1,\n      toValue: 1,\n      invalidFrom: 'none',\n      lastBestRate: 0,\n      selectedProvider: {},\n      swapDetails: {},\n      currencyDetails: {},\n      swap: new SwapProviders(\n        providers,\n        {\n          network: this.$store.state.network.type.name,\n          web3: this.$store.state.web3,\n          getRateForUnit: false\n        },\n        {\n          tokensWithBalance: this.tokensWithBalance,\n          overrideDecimals: true,\n          online: this.$store.state.online\n        }\n      ),\n      images: {\n        kybernetowrk: ImageKybernetowrk,\n        bity: ImageBity,\n        visaMaster: ImageVisaMaster,\n        swap: swapIcon\n      },\n      toArray: [],\n      fromArray: [],\n      providerData: [],\n      tokenBalances: {},\n      providerRatesRecieved: [],\n      noProvidersPair: {},\n      providersFound: [],\n      tempStatuses: [],\n      overrideFrom: {},\n      overrideTo: {},\n      providerNames: providerNames,\n      supportedProviders: supportedProviders,\n      fiatCurrenciesArray: fiat.map(entry => entry.symbol),\n      finalizingSwap: false,\n      validAddress: true,\n      validRefundAddress: true,\n      validExitAddress: true,\n      ratesRetrived: false,\n      issueRecievingRates: false,\n      loadingData: true,\n      haveProviderRates: false,\n      loadingError: false,\n      switchCurrencyOrder: false,\n      bityExitToFiat: false,\n      exitToFiatCallback: () => {},\n      debounceUpdateEstimate: {},\n      debounceDoThing: {},\n      widgetOpen: false,\n      loadingWidget: false\n    };\n  },\n  computed: {\n    ...mapState(['account', 'ens', 'gasPrice', 'web3', 'network', 'online']),\n    bestRate() {\n      try {\n        if (this.providerData.length > 0) {\n          if (this.selectedProvider.provider) {\n            return this.providerList.find(entry => {\n              return entry.provider === this.selectedProvider.provider;\n            }).rate;\n          }\n          return bestRateForQuantity([...this.providerList], this.fromValue);\n        }\n        return this.lastBestRate;\n      } catch (e) {\n        errorLogger(e);\n      }\n    },\n    fromBelowMinAllowed() {\n      if (new BigNumber(MIN_SWAP_AMOUNT).gt(new BigNumber(this.fromValue)))\n        return `${this.$t('interface.belowMin')} ${MIN_SWAP_AMOUNT}`;\n      if (\n        new BigNumber(this.selectedProvider.minValue).gt(\n          new BigNumber(this.fromValue)\n        )\n      )\n        return this.$t('interface.belowMin', {\n          value: toBigNumber(this.selectedProvider.maxValue).toFixed(6),\n          currency: this.fromCurrency\n        });\n      return false;\n    },\n    fromAboveMaxAllowed() {\n      if (this.selectedProvider.provider === this.providerNames.bity) {\n        if (this.checkBityMax) {\n          return this.$t('interface.aboveMax', {\n            value: toBigNumber(this.selectedProvider.maxValue).toFixed(6),\n            currency: this.fromCurrency\n          });\n        }\n        return false;\n      } else if (\n        toBigNumber(this.fromValue).gt(\n          toBigNumber(this.selectedProvider.maxValue)\n        ) &&\n        toBigNumber(this.selectedProvider.maxValue).gt(toBigNumber(0))\n      )\n        return this.$t('interface.aboveMaxSwap', {\n          value: toBigNumber(this.selectedProvider.maxValue).toFixed(6),\n          currency: this.fromCurrency\n        });\n      return false;\n    },\n    toBelowMinAllowed() {\n      if (this.checkBityMin) return this.$t('interface.belowMinGeneral');\n      if (toBigNumber(0).gte(toBigNumber(this.toValue)))\n        return this.$t('interface.belowMinGeneral');\n      return false;\n    },\n    toAboveMaxAllowed() {\n      if (this.checkBityMax) return this.$t('interface.aboveMaxGeneral');\n      return false;\n    },\n    providerList() {\n      if (this.providerData.length > 0) {\n        return bestProviderForQuantity([...this.providerData], this.fromValue);\n      }\n      return [];\n    },\n    isExitToFiat() {\n      return this.fiatCurrenciesArray.includes(this.toCurrency);\n    },\n    validSwap() {\n      // initial chack.  will provide an alert on the next screen if no address is provided\n      const canExit =\n        this.isExitToFiat && this.fromCurrency !== this.baseCurrency\n          ? this.exitFromAddress !== ''\n          : true;\n      return (\n        this.hasEnough &&\n        (this.toAddress !== '' || canExit) &&\n        this.allAddressesValid &&\n        toBigNumber(this.selectedProvider.minValue).lte(\n          toBigNumber(this.fromValue)\n        ) &&\n        (toBigNumber(this.fromValue).lte(\n          toBigNumber(this.selectedProvider.maxValue)\n        ) ||\n          this.selectedProvider.maxValue === 0)\n      );\n    },\n    checkBityMin() {\n      if (this.swap.isProvider(this.providerNames.bity)) {\n        return (\n          !this.swap\n            .getProvider(this.providerNames.bity)\n            .minCheck(\n              this.fromCurrency,\n              this.fromValue,\n              this.toCurrency,\n              this.toValue\n            ) && this.selectedProvider.provider === this.providerNames.bity\n        );\n      }\n      return false;\n    },\n    checkBityMax() {\n      if (this.swap.isProvider(this.providerNames.bity)) {\n        return (\n          !this.swap\n            .getProvider(this.providerNames.bity)\n            .maxCheck(\n              this.fromCurrency,\n              this.fromValue,\n              this.toCurrency,\n              this.toValue\n            ) && this.selectedProvider.provider === this.providerNames.bity\n        );\n      }\n      return false;\n    },\n    showRefundAddress() {\n      return (\n        !SwapProviders.isToken(this.fromCurrency) &&\n        this.selectedProvider.provider === this.providerNames.changelly\n      );\n    },\n    allAddressesValid() {\n      const validBaseToAddress = this.toAddress !== '' && this.validAddress;\n\n      if (this.isExitToFiat) {\n        if (this.fromCurrency === this.baseCurrency) {\n          return true;\n        }\n        return this.exitFromAddress !== '' && this.validExitAddress;\n      }\n      if (this.showRefundAddress) {\n        if (\n          this.fromCurrency === this.baseCurrency ||\n          SwapProviders.isToken(this.fromCurrency)\n        ) {\n          const validRefundAddress =\n            this.refundAddress === '' && this.validRefundAddress;\n          return validBaseToAddress && validRefundAddress;\n        }\n        return SwapProviders.checkAddress(\n          this.refundAddress,\n          this.fromCurrency\n        );\n      }\n\n      return validBaseToAddress;\n    },\n    hasEnough() {\n      if (\n        SwapProviders.isToken(this.fromCurrency) &&\n        this.fromCurrency !== this.baseCurrency\n      ) {\n        const enteredVal = this.swap.convertToTokenWei(\n          this.fromCurrency,\n          this.fromValue\n        );\n\n        return new BigNumber(this.tokenBalances[this.fromCurrency]).gte(\n          new BigNumber(enteredVal)\n        );\n      } else if (this.fromCurrency === this.baseCurrency) {\n        const enteredVal = this.swap.convertToTokenWei(\n          this.fromCurrency,\n          this.fromValue\n        );\n        return new BigNumber(this.account.balance).gt(\n          new BigNumber(enteredVal)\n        );\n      }\n      return true;\n    },\n    exitSourceAddress() {\n      return this.isExitToFiat && this.fromCurrency === this.baseCurrency\n        ? this.currentAddress\n        : this.exitFromAddress;\n    }\n  },\n  watch: {\n    ['this.network.type.name']() {\n      this.swap.updateNetwork(this.network.type.name);\n    },\n    ['swap.updateProviderRates']() {\n      const { toArray, fromArray } = this.swap.initialCurrencyLists;\n      this.toArray = toArray;\n      this.fromArray = fromArray;\n    },\n    ['swap.haveProviderRates']() {\n      this.haveProviderRates = this.swap.haveProviderRates;\n      const { toArray, fromArray } = this.swap.buildInitialCurrencyArrays();\n      this.toArray = toArray;\n      this.fromArray = fromArray;\n      this.lastBestRate = bestRateForQuantity(\n        [...this.providerList],\n        this.fromValue\n      );\n      this.updateRateEstimate(\n        this.fromCurrency,\n        this.toCurrency,\n        this.fromValue,\n        'from'\n      );\n      if (this.isWidget && this.widgetOpen) {\n        this.$once('swapRatesUpdated', () => {\n          if (this.suppliedToAmount > 0) {\n            this.toValue = this.suppliedToAmount;\n            this.fromValue = this.swap.calculateFromValue(\n              this.toValue,\n              this.bestRate,\n              this.fromCurrency\n            );\n          } else if (this.suppliedFromAmount > 0) {\n            this.fromValue = this.suppliedFromAmount;\n            this.toValue = this.swap.calculateToValue(\n              this.fromValue,\n              this.bestRate,\n              this.toCurrency\n            );\n          }\n        });\n      }\n    },\n    network(newVal) {\n      this.providerData = [];\n      this.haveProviderRates = false;\n      this.loadingData = false;\n      this.swap = new SwapProviders(providers, {\n        network: newVal.type.name,\n        web3: this.web3\n      });\n    }\n  },\n  mounted() {\n    if (this.online) {\n      const { toArray, fromArray } = this.swap.initialCurrencyLists;\n      this.toArray = toArray;\n      this.fromArray = fromArray;\n      this.currentAddress = this.account.address;\n      this.debounceUpdateEstimate = this.web3.utils._.debounce(\n        this.updateEstimate,\n        300\n      );\n      this.debounceReviseRateEstimate = this.web3.utils._.debounce(\n        this.updateRateEstimate,\n        2000\n      );\n\n      this.$refs.modal.$on('shown', () => {\n        this.widgetOpen = true;\n        if (this.isWidget) {\n          this.toAddress = this.destAddress !== '' ? this.destAddress : '';\n          this.fromCurrency = this.suppliedFrom.symbol;\n          this.toCurrency = this.suppliedTo.symbol;\n          this.overrideFrom = this.suppliedFrom;\n          this.overrideTo = this.suppliedTo;\n          if (toBigNumber(this.suppliedToAmount).gt(0)) {\n            this.loadingWidget = true;\n            this.toValue = this.suppliedToAmount;\n            this.amountChanged('to');\n          } else {\n            this.toValue = 0;\n          }\n        }\n      });\n\n      this.$refs.modal.$on('hide', () => {\n        this.widgetOpen = false;\n      });\n    }\n  },\n  methods: {\n    reset() {\n      this.updateRateEstimate(\n        this.fromCurrency,\n        this.toCurrency,\n        this.fromValue,\n        'from'\n      );\n      this.finalizingSwap = false;\n      this.validAddress = true;\n      this.issueRecievingRates = false;\n      this.loadingError = false;\n      this.switchCurrencyOrder = false;\n      this.bityExitToFiat = false;\n    },\n    flipCurrencies() {\n      if (!this.isWidget) {\n        this.switchCurrencyOrder = true;\n        const origTo = this.toValue;\n        this.fromCurrency = this.currencyDetails.to.symbol;\n        this.toCurrency = this.currencyDetails.from.symbol;\n        this.overrideFrom = this.currencyDetails.to;\n        this.overrideTo = this.currencyDetails.from;\n        this.updateRateEstimate(\n          this.fromCurrency,\n          this.toCurrency,\n          origTo,\n          'from'\n        );\n        this.switchCurrencyOrder = false;\n      }\n    },\n    setSelectedProvider(provider) {\n      this.selectedProvider = this.providerList.find(entry => {\n        return entry.provider === provider;\n      });\n      this.updateEstimate('from');\n    },\n    setToAddress(address) {\n      this.toAddress = address;\n    },\n    setRefundAddress(address) {\n      this.refundAddress = address;\n    },\n    setExitFromAddress(address) {\n      this.exitFromAddress = address;\n    },\n    swapAll() {\n      this.fromValue = this.swap.convertToTokenBase(\n        this.fromCurrency,\n        this.tokenBalances[this.fromCurrency]\n      );\n      this.amountChanged('from');\n    },\n    setFromCurrency(value, dir = 'from') {\n      this.currencyDetails.from = value;\n      this.fromCurrency = value.symbol;\n      this.getBalance(this.fromCurrency);\n      this.toArray = this.swap.setToCurrencyBuilder(value);\n      this.updateRateEstimate(\n        this.fromCurrency,\n        this.toCurrency,\n        this.fromValue,\n        dir\n      );\n    },\n    setToCurrency(value, dir = 'to') {\n      this.currencyDetails.to = value;\n      this.toCurrency = value.symbol;\n      this.fromArray = this.swap.setFromCurrencyBuilder(value);\n      this.updateRateEstimate(\n        this.fromCurrency,\n        this.toCurrency,\n        this.fromValue,\n        dir\n      );\n    },\n    async getBalance(currency) {\n      if (SwapProviders.isToken(currency) && currency !== this.baseCurrency) {\n        const balance = await new this.web3.eth.Contract(\n          ERC20,\n          this.swap.getTokenAddress(currency)\n        ).methods\n          .balanceOf(this.currentAddress)\n          .call();\n\n        this.$set(this.tokenBalances, currency, balance);\n      }\n    },\n    amountChanged(direction) {\n      if (\n        (isValidEntry(this.fromValue) && direction === 'from') ||\n        (isValidEntry(this.toValue) && direction === 'to')\n      ) {\n        if (\n          this.swap.getProvider(this.providerNames.simplex).currencies.fiat[\n            this.fromCurrency\n          ]\n        ) {\n          this.web3.utils._.debounce(\n            this.updateEstimate(this.providerNames.simplex + direction),\n            200\n          );\n        } else {\n          this.debounceUpdateEstimate(direction);\n          const fromCur = this.fromCurrency;\n          const toCur = this.toCurrency;\n          const fromVal = this.fromValue;\n          this.debounceReviseRateEstimate(fromCur, toCur, fromVal, direction);\n        }\n      }\n    },\n    async updateEstimate(input) {\n      let fromValue, toValue, simplexProvider, simplexRateDetails;\n      switch (input) {\n        case 'to':\n          this.fromValue = this.swap.calculateFromValue(\n            this.toValue,\n            this.bestRate,\n            this.fromCurrency\n          );\n          break;\n        case 'from':\n          this.toValue = this.swap.calculateToValue(\n            this.fromValue,\n            this.bestRate,\n            this.toCurrency\n          );\n          break;\n        case `${this.providerNames.simplex}to`:\n          simplexProvider = this.swap.getProvider(this.providerNames.simplex);\n\n          if (simplexProvider.canQuote(this.fromValue, this.toValue)) {\n            simplexRateDetails = await simplexProvider.updateDigital(\n              this.fromCurrency,\n              this.toCurrency,\n              this.toValue\n            );\n\n            this.fromValue = simplexRateDetails.fromValue;\n            this.toValue = simplexRateDetails.toValue;\n          } else {\n            simplexRateDetails = await simplexProvider.updateFiat(\n              this.fromCurrency,\n              this.toCurrency,\n              51\n            );\n\n            const rate = new BigNumber(simplexRateDetails.toValue)\n              .div(simplexRateDetails.fromValue)\n              .toString(10);\n\n            this.fromValue = this.swap.calculateFromValue(\n              this.toValue,\n              rate,\n              this.fromCurrency\n            );\n          }\n\n          break;\n        case `${this.providerNames.simplex}from`:\n          simplexProvider = this.swap.getProvider(this.providerNames.simplex);\n          if (simplexProvider.canQuote(this.fromValue, this.toValue)) {\n            simplexRateDetails = await simplexProvider.updateFiat(\n              this.fromCurrency,\n              this.toCurrency,\n              this.fromValue\n            );\n\n            this.fromValue = simplexRateDetails.fromValue;\n            this.toValue = simplexRateDetails.toValue;\n          } else {\n            simplexRateDetails = await simplexProvider.updateFiat(\n              this.fromCurrency,\n              this.toCurrency,\n              51\n            );\n\n            const rate = new BigNumber(simplexRateDetails.toValue)\n              .div(simplexRateDetails.fromValue)\n              .toString(10);\n\n            this.toValue = this.swap.calculateToValue(this.fromValue, rate);\n          }\n\n          break;\n        default:\n          toValue = this.swap.calculateToValue(this.fromValue, this.bestRate);\n          fromValue = this.swap.calculateFromValue(this.toValue, this.bestRate);\n          this.toValue = toValue;\n          this.fromValue = fromValue;\n          break;\n      }\n\n      if (this.toValue - this.suppliedToAmount > 1 && this.loadingWidget) {\n        this.loadingWidget = false;\n        this.toValue = this.suppliedToAmount;\n        this.updateEstimate('to');\n      }\n    },\n    async updateRateEstimate(fromCurrency, toCurrency, fromValue, to) {\n      if (this.haveProviderRates) {\n        this.loadingData = true;\n        this.noProvidersPair = { fromCurrency, toCurrency };\n        this.selectedProvider = {}; // Reset the selected provider when new rate pair is choosen\n        this.providerData = [];\n        const {\n          providersFound,\n          callsToMake\n        } = await this.swap.updateRateEstimate(\n          fromCurrency,\n          toCurrency,\n          fromValue,\n          this.toValue\n        );\n        this.providersFound = providersFound;\n        const results = await Promise.all(\n          callsToMake.map(func =>\n            func(fromCurrency, toCurrency, fromValue, this.toValue)\n          )\n        );\n        this.loadingData = false;\n        if (\n          results.every(\n            entry =>\n              entry.fromCurrency === this.fromCurrency &&\n              entry.toCurrency === this.toCurrency\n          )\n        ) {\n          this.providerData = bestProviderForQuantity(\n            results.map(entry => {\n              if (+entry.rate > 0) {\n                return {\n                  provider: entry.provider,\n                  fromCurrency,\n                  fromValue: this.fromValue,\n                  toCurrency,\n                  rate: +entry.rate,\n                  minValue: entry.minValue || 0,\n                  maxValue: entry.maxValue || 0,\n                  computeConversion: function(_fromValue) {\n                    return new BigNumber(_fromValue)\n                      .times(this.rate)\n                      .toFixed(6)\n                      .toString(10);\n                  }\n                };\n              }\n            }),\n            fromValue\n          );\n          this.$emit('swapRatesUpdated');\n          this.updateEstimate(to);\n        }\n      }\n    },\n    async swapConfirmationModalOpen() {\n      try {\n        if (this.validSwap) {\n          this.finalizingSwap = true;\n          const providerDetails = this.providerList.find(entry => {\n            return entry.provider === this.selectedProvider.provider;\n          });\n          const swapDetails = {\n            providerDetails: providerDetails,\n            fromValue: this.fromValue,\n            toValue: this.toValue,\n            toAddress: this.toAddress || this.currentAddress,\n            fromAddress: this.currentAddress,\n            refundAddress: SwapProviders.isToken(providerDetails.fromCurrency)\n              ? this.currentAddress\n              : this.refundAddress,\n            exitFromAddress:\n              this.isExitToFiat && this.fromCurrency === this.baseCurrency\n                ? this.currentAddress\n                : this.exitFromAddress\n          };\n          this.swapDetails = await this.swap.startSwap(swapDetails);\n          this.finalizingSwap = false;\n\n          if (this.swapDetails.isExitToFiat) {\n            this.bityExitToFiat = true;\n            this.exitToFiatCallback = swapDetailsExit => {\n              this.bityExitToFiat = false;\n              this.swapDetails = swapDetailsExit;\n              this.openConfirmModal(this.swapDetails);\n            };\n          } else {\n            this.openConfirmModal(this.swapDetails);\n          }\n        }\n      } catch (e) {\n        //abort (empty response from provider or failure to finalize details)\n        if (e.message === 'abort') {\n          this.finalizingSwap = false;\n          return;\n        }\n        this.$refs.swapConfirmation.$refs.swapconfirmation.hide();\n        this.$refs.swapSendTo.$refs.swapconfirmation.hide();\n        this.finalizingSwap = false;\n        errorLogger(e);\n        Toast.responseHandler(e, false);\n      }\n    },\n    openConfirmModal(swapDetails) {\n      if (swapDetails.dataForInitialization && swapDetails.maybeToken) {\n        this.$refs.swapConfirmation.$refs.swapconfirmation.show();\n      } else if (swapDetails.dataForInitialization && !swapDetails.maybeToken) {\n        this.$refs.swapSendTo.$refs.swapconfirmation.show();\n      } else {\n        throw Error('Error while requesting finalized details from provider');\n      }\n    },\n    exitToFiatAbort() {\n      // get any component state values to temporarily persist, and reset swap state to state before exit to fiat selected.\n      this.bityExitToFiat = !this.bityExitToFiat;\n    },\n    resetSwapState() {\n      this.$refs.modal.hide();\n      this.reset();\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'SwapWidget.scss';\n</style>\n","import mod from \"-!../../../../../../../../MyEtherWallet/node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../../../../MyEtherWallet/node_modules/thread-loader/dist/cjs.js!../../../../../../../../MyEtherWallet/node_modules/babel-loader/lib/index.js!../../../../../../../../MyEtherWallet/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../../../../MyEtherWallet/node_modules/vue-loader/lib/index.js??vue-loader-options!./SwapWidget.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../../../MyEtherWallet/node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../../../../MyEtherWallet/node_modules/thread-loader/dist/cjs.js!../../../../../../../../MyEtherWallet/node_modules/babel-loader/lib/index.js!../../../../../../../../MyEtherWallet/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../../../../MyEtherWallet/node_modules/vue-loader/lib/index.js??vue-loader-options!./SwapWidget.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SwapWidget.vue?vue&type=template&id=2f40bd05&scoped=true&\"\nimport script from \"./SwapWidget.vue?vue&type=script&lang=js&\"\nexport * from \"./SwapWidget.vue?vue&type=script&lang=js&\"\nimport style0 from \"./SwapWidget.vue?vue&type=style&index=0&id=2f40bd05&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../../../MyEtherWallet/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"2f40bd05\",\n  null\n  \n)\n\nexport default component.exports","export {\n  default\n} from '@/layouts/InterfaceLayout/containers/SwapContainer/components/SwapWidget';\n"],"sourceRoot":""}